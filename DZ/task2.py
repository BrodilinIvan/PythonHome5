"""
Задание 2. Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.
Решите через рекурсию. В задании нельзя применять циклы.
Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def func_count():
    """
Функция func_count запрашивает число у пользователя. Проверяет его на
корректность ввода и присваевает его пременной num. Далее передает в другую
функцию func_count_lever(honest, odd, num) с входящими значениями, где
переменные honest и odd являются счетчиками для четных и нечетных чисел.
Функция func_count_lever выполняет подсчет содержащихся чисел в переменной num,
после чего выводит результат.
    """
    try:
        num = int(input('Введите натуральное число: '))
    except ValueError:
        print('Введено некорректное значение! Повторите Ввод!')
        func_count()
    if num < 1:
        print('Введено некорректное значение! Повторите Ввод!')
        func_count()
    else:
        def func_count_lever(honest, odd, num):
            rezult = num % 10
            if rezult % 2 == 0:
                honest += 1
            else:
                odd += 1
            num = num // 10
            if num == 0:
                return print(f'В данном числе \nчетных чисел: {honest} \n'
                             f'нечетных чисел: {odd}')
            else:
                func_count_lever(honest, odd, num)
        func_count_lever(honest=0, odd=0, num=num)

func_count()
